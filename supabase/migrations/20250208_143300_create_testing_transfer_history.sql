-- Create testing_transfer_history table
CREATE TABLE testing_transfer_history (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID NOT NULL REFERENCES auth.users(id),
  job_id TEXT NOT NULL,
  name TEXT NOT NULL,
  status TEXT NOT NULL,
  source TEXT,
  destination TEXT,
  total_bytes BIGINT,
  total_files INTEGER,
  created_on TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()),
  completed_on TIMESTAMP WITH TIME ZONE,
  last_modified_on TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()),
  UNIQUE(user_id, job_id)
);

-- Enable RLS
ALTER TABLE testing_transfer_history ENABLE ROW LEVEL SECURITY;

-- Create RLS policies
CREATE POLICY "Users can view their own transfers"
ON testing_transfer_history
FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Users can insert their own transfers"
ON testing_transfer_history
FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own transfers"
ON testing_transfer_history
FOR UPDATE
USING (auth.uid() = user_id)
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can delete their own transfers"
ON testing_transfer_history
FOR DELETE
USING (auth.uid() = user_id);
