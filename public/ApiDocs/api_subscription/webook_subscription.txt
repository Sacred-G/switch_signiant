	
JetTransferWebhookSubscriptionRequestCommon{
notificationMethod*	string
The subscribed entities will receive webhook notifications for events.

Enum:
[ WEBHOOK, EMAIL, WEBHOOK ]
notificationConfig*	{
description:	
The config for webhook notifications.

url*	string
maximum: 200
example: https://example.com/webhook/url"
Subscribed entities will receive event notifications at this URL (HTTPS only).

aggregationConfig	{
description:	
Contains properties to modify aggregation behaviour

aggregationWindowInSeconds*	number
minimum: 600
maximum: 86400
example: 600
Amount of time during which all incoming notifications for this subscription will be aggregated

}
}
eventCategory*	string
A subscription allows notifications to be sent about a specified category of events. The eventTypes array allows the subscription scope to be narrowed using a list of event types for that event category. If no events are specified, a notification is sent for all associated events.

Enum:
[ ENDPOINT, JET_DELIVERY, JET_JOB, JET_TRANSFER, STORAGE_PROFILE, JET_TRANSFER ]
metadata	{
description:	
Metadata that is associated with the subscription.

}
example: OrderedMap { "sampleMetadataProperty": true }
eventFilterConfig*	{
jobId*	string($uuid)
example: 9c0c2c99-4f32-4d18-95da-d83642dd515d
Events associated with the job with this id will be returned by the subscription.

eventTypes	[
minimum: 1
maximum: 5
An optional list of event types from the JET_TRANSFER event category. If ommitted, the subscription is to all events in the category.

string
Enum:
[ com.signiant.jet.transfer.queued, com.signiant.jet.transfer.inProgress, com.signiant.jet.transfer.failed, com.signiant.jet.transfer.canceled, com.signiant.jet.transfer.completed ]
]
}
}
StorageProfileWebhookSubscriptionRequestCommon{
notificationMethod*	string
The subscribed entities will receive webhook notifications for events.

Enum:
[ WEBHOOK, EMAIL, WEBHOOK ]
notificationConfig*	{
description:	
The config for webhook notifications.

url*	string
maximum: 200
example: https://example.com/webhook/url"
Subscribed entities will receive event notifications at this URL (HTTPS only).

}
eventCategory*	string
A subscription allows notifications to be sent about a specified category of events. The eventTypes array allows the subscription scope to be narrowed using a list of event types for that event category. If no events are specified, a notification is sent for all associated events.

Enum:
[ ENDPOINT, JET_DELIVERY, JET_JOB, JET_TRANSFER, STORAGE_PROFILE, STORAGE_PROFILE ]
metadata	{
description:	
Metadata that is associated with the subscription.

}
example: OrderedMap { "sampleMetadataProperty": true }
eventFilterConfig	{
eventTypes*	[
minimum: 1
maximum: 2
List of event types for the STORAGE_PROFILE event category.

string
Enum:
[ com.signiant.storageProfile.created, com.signiant.storageProfile.deleted ]
]
}
}
JetJobWebhookSubscriptionRequestCommon{
notificationMethod*	string
The subscribed entities will receive webhook notifications for events.

Enum:
[ WEBHOOK, EMAIL, WEBHOOK ]
notificationConfig*	{
description:	
The config for webhook notifications.

url*	string
maximum: 200
example: https://example.com/webhook/url"
Subscribed entities will receive event notifications at this URL (HTTPS only).

}
eventCategory*	string
A subscription allows notifications to be sent about a specified category of events. The eventTypes array allows the subscription scope to be narrowed using a list of event types for that event category. If no events are specified, a notification is sent for all associated events.

Enum:
[ ENDPOINT, JET_DELIVERY, JET_JOB, JET_TRANSFER, STORAGE_PROFILE, JET_JOB ]
metadata	{
description:	
Metadata that is associated with the subscription.

}
example: OrderedMap { "sampleMetadataProperty": true }
eventFilterConfig	{
eventTypes*	[
minimum: 1
maximum: 4
List of event types for the JET_JOB event category.

string
Enum:
[ com.signiant.jet.job.created, com.signiant.jet.job.paused, com.signiant.jet.job.resumed, com.signiant.jet.job.deleted ]
]
}
}
EndpointWebhookSubscriptionRequestCommon{
notificationMethod*	[...]
notificationConfig*	{
description:	
The config for webhook notifications.

url*	string
maximum: 200
example: https://example.com/webhook/url"
Subscribed entities will receive event notifications at this URL (HTTPS only).

}
eventCategory*	string
A subscription allows notifications to be sent about a specified category of events. The eventTypes array allows the subscription scope to be narrowed using a list of event types for that event category. If no events are specified, a notification is sent for all associated events.

Enum:
[ ENDPOINT, JET_DELIVERY, JET_JOB, JET_TRANSFER, STORAGE_PROFILE, ENDPOINT ]
metadata	{
description:	
Metadata that is associated with the subscription.

}
example: OrderedMap { "sampleMetadataProperty": true }
eventFilterConfig	{
eventTypes*	[
minimum: 1
maximum: 5
List of event types for the ENDPOINT event category.

string
Enum:
[ com.signiant.endpoint.created, com.signiant.endpoint.deleted, com.signiant.endpoint.modified, com.signiant.endpoint.online, com.signiant.endpoint.offline ]
]
}
}
JetDeliveryWebhookSubscriptionRequestCommon{
notificationMethod*	[...]
notificationConfig*	{...}
eventCategory*	[...]
metadata	{...}
example: OrderedMap { "sampleMetadataProperty": true }
eventFilterConfig*	{...}
}
JetTransferEmailSubscriptionRequestCommon{
notificationMethod*	string
The subscribed entites will receive email notifications for events.

Enum:
[ WEBHOOK, EMAIL, EMAIL ]
notificationConfig*	{
description:	
The config for email notification.

recipients*	[
minimum: 1
maximum: 1
Subscribed entities will receive event notification(s) at this email address

string
example: List [ "user@example.com" ]]
aggregationConfig	{
description:	
Contains properties to modify aggregation behaviour

aggregationWindowInSeconds*	number
minimum: 600
maximum: 86400
example: 600
Amount of time during which all incoming notifications for this subscription will be aggregated

}
}
eventCategory*	string
A subscription allows notifications to be sent about a specified category of events. The eventTypes array allows the subscription scope to be narrowed using a list of event types for that event category. If no events are specified, a notification is sent for all associated events.

Enum:
[ ENDPOINT, JET_DELIVERY, JET_JOB, JET_TRANSFER, STORAGE_PROFILE, JET_TRANSFER ]
metadata	{
description:	
Metadata that is associated with the subscription.

}
example: OrderedMap { "sampleMetadataProperty": true }
eventFilterConfig*	{
jobId*	string($uuid)
example: 9c0c2c99-4f32-4d18-95da-d83642dd515d
Events associated with the job with this id will be returned by the subscription.

eventTypes*	[
minimum: 1
maximum: 3
List of terminal event types from JET_TRANSFER event category

string
Enum:
[ com.signiant.jet.transfer.queued, com.signiant.jet.transfer.inProgress, com.signiant.jet.transfer.failed, com.signiant.jet.transfer.canceled, com.signiant.jet.transfer.completed, com.signiant.jet.transfer.failed, com.signiant.jet.transfer.canceled, com.signiant.jet.transfer.completed ]
]
}
}
JetDeliveryEmailSubscriptionRequestCommon{
notificationMethod*	string
The subscribed entites will receive email notifications for events.

Enum:
[ WEBHOOK, EMAIL, EMAIL ]
notificationConfig*	{
description:	
The config for email notification.

recipients*	[...]
}
eventCategory*	string
A subscription allows notifications to be sent about a specified category of events. The eventTypes array allows the subscription scope to be narrowed using a list of event types for that event category. If no events are specified, a notification is sent for all associated events.

Enum:
[ ENDPOINT, JET_DELIVERY, JET_JOB, JET_TRANSFER, STORAGE_PROFILE, JET_DELIVERY ]
metadata	{
description:	
Metadata that is associated with the subscription.

}
example: OrderedMap { "sampleMetadataProperty": true }
eventFilterConfig*	{
jobId*	string($uuid)
example: 9c0c2c99-4f32-4d18-95da-d83642dd515d
Events associated with the job with this id will be returned by the subscription.

eventTypes*	[
minimum: 1
maximum: 2
List of terminal event types from JET_DELIVERY event category

string
Enum:
[ com.signiant.jet.delivery.created, com.signiant.jet.delivery.inProgress, com.signiant.jet.delivery.queued, com.signiant.jet.delivery.scheduled, com.signiant.jet.delivery.failed, com.signiant.jet.delivery.completed, com.signiant.jet.delivery.completed, com.signiant.jet.delivery.failed ]
]
}
}
